apiVersion: apps/v1
kind: Deployment
metadata:
  name: flask-deployment
  labels:
    app: flask-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: flask-app
  template:
    metadata:
      labels:
        app: flask-app
    spec:
      initContainers:
      - name: init-db-check
        env:
          - name: MYSQL_HOST
            value: mysql-service
          - name: MYSQL_PORT
            valueFrom:
              configMapKeyRef:
                name: my-configmap         
                key: DB_PORT

        image: busybox
        command: ['sh', '-c', 'until nc -z -v -w15 ${MYSQL_HOST} ${MYSQL_PORT}; do echo "Waiting for database..."; sleep 5; done']
      containers:
        - name: flask-container
          image: dialloabdoulaye123/flask_kub_app:v1.3
          resources:
            requests:
              memory: "64Mi"
              cpu: "250m"
            limits:
              memory: "128Mi"
              cpu: "500m"
          ports:
            - containerPort: 5000
          env:
            - name: MYSQL_HOST
              value: mysql-service
            - name: MYSQL_USER
              valueFrom:
                secretKeyRef:
                  name: mysecret
                  key: username
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysecret
                  key: password
            - name: DB_NAME
              valueFrom:
                configMapKeyRef:
                  name: my-configmap         
                  key: DB_NAME 

          livenessProbe:
            httpGet:
              path: /healthz
              port: 5000
            initialDelaySeconds: 10
            periodSeconds: 5

          readinessProbe:
            httpGet:
              path: /ready
              port: 5000
            initialDelaySeconds: 10
            periodSeconds: 5

      topologySpreadConstraints:
      - maxSkew: 1
        topologyKey: "kubernetes.io/hostname"
        whenUnsatisfiable: DoNotSchedule
        labelSelector:
          matchLabels:
            app: flask-app
